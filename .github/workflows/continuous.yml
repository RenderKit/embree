## Copyright 2022 Intel Corporation
## SPDX-License-Identifier: Apache-2.0

name: continuous

on: [push, workflow_dispatch]

jobs:

  ################################################################################
  ################################################################################
  # GPU tests
  ################################################################################
  ###############################################################################

  ########################################
  # Linux DG2
  ########################################
  linux-DG2-JIT-INTERNAL:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    with:
      image: embree/ubuntu:22.04
      runs-on: '[ "Linux", "docker", "build" ]'
      project: embree
      env-from-files: ./.github/workflows/dpcpp-sycl-nightly.env ./.github/workflows/gfx-ubuntu22-internal.env
      artifact-out: linux-DG2-JIT-INTERNAL
      artifact-path: ./build .ctest_conf
      cmd: |
        scripts/test.py configure platform:x64 compiler:dpcpp ispc:ispc1.21.0 isa:SSE2 build:RelWithAssert EMBREE_SYCL_SUPPORT:ON LEVEL_ZERO:ON sycl:none tasking:TBB2021.10.0 intensity:4
        scripts/test.py build --debug
        scripts/test.py build

  linux-DG2-JIT-INTERNAL-test:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    needs: ["linux-DG2-JIT-INTERNAL"]
    with:
      image: embree/ubuntu:22.04
      options: --device=/dev/dri:/dev/dri
      runs-on: '[ "Linux", "docker", "dg2" ]'
      project: embree
      env-from-files: ./.github/workflows/dpcpp-sycl-nightly.env ./.github/workflows/gfx-ubuntu22-internal.env
      artifact-in: linux-DG2-JIT-INTERNAL
      cmd: |
        scripts/test.py test --debug
        scripts/test.py test

  linux-DG2-JIT-PUBLIC:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    with:
      image: embree/ubuntu:22.04
      runs-on: '[ "Linux", "docker", "build" ]'
      project: embree
      env-from-files: ./.github/workflows/dpcpp-sycl-nightly.env ./.github/workflows/gfx-ubuntu22-public.env
      artifact-out: linux-DG2-JIT-PUBLIC
      artifact-path: ./build .ctest_conf
      cmd: |
        scripts/test.py configure platform:x64 compiler:dpcpp ispc:ispc1.21.0 isa:SSE2 build:RelWithAssert EMBREE_SYCL_SUPPORT:ON sycl:none tasking:TBB2021.10.0 intensity:4
        scripts/test.py build --debug
        scripts/test.py build

  linux-DG2-JIT-PUBLIC-test:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    needs: ["linux-DG2-JIT-PUBLIC"]
    with:
      image: embree/ubuntu:22.04
      options: --device=/dev/dri:/dev/dri
      runs-on: '[ "Linux", "docker", "dg2" ]'
      project: embree
      env-from-files: ./.github/workflows/dpcpp-sycl-nightly.env ./.github/workflows/gfx-ubuntu22-public.env
      artifact-in: linux-DG2-JIT-PUBLIC
      cmd: |
        scripts/test.py test --debug
        scripts/test.py test

  linux-DG2-JIT-EMBARGO:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    with:
      image: embree/ubuntu:22.04
      runs-on: '[ "Linux", "docker", "build" ]'
      project: embree
      env-from-files: ./.github/workflows/dpcpp-sycl-nightly.env ./.github/workflows/gfx-ubuntu22-embargo.env
      artifact-out: linux-DG2-JIT-EMBARGO
      artifact-path: ./build .ctest_conf
      cmd: |
        scripts/test.py configure platform:x64 compiler:dpcpp ispc:ispc1.21.0 isa:SSE2 build:RelWithAssert EMBREE_SYCL_SUPPORT:ON sycl:none tasking:TBB2021.10.0 intensity:4
        scripts/test.py build --debug
        scripts/test.py build

  linux-DG2-JIT-EMBARGO-test:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    needs: ["linux-DG2-JIT-EMBARGO"]
    with:
      image: embree/ubuntu:22.04
      options: --device=/dev/dri:/dev/dri
      runs-on: '[ "Linux", "docker", "dg2" ]'
      project: embree
      env-from-files: ./.github/workflows/dpcpp-sycl-nightly.env ./.github/workflows/gfx-ubuntu22-embargo.env
      artifact-in: linux-DG2-JIT-EMBARGO
      cmd: |
        scripts/test.py test --debug
        scripts/test.py test

  linux-DG2-JIT-PUBLIC-ICX:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    with:
      image: embree/ubuntu:22.04
      runs-on: '[ "Linux", "docker", "build" ]'
      project: embree
      env-from-files: ./.github/workflows/dpcpp-none.env ./.github/workflows/gfx-ubuntu22-public.env
      dpcpp-version: intel/2023.1
      artifact-out: linux-DG2-JIT-PUBLIC-ICX
      artifact-path: ./build .ctest_conf
      cmd: |
        scripts/test.py configure platform:x64 compiler:ICX ispc:ispc1.21.0 isa:AVX512 build:RelWithAssert EMBREE_SYCL_SUPPORT:ON sycl:none tasking:TBB2021.10.0 intensity:4
        scripts/test.py build --debug
        scripts/test.py build

  linux-DG2-JIT-PUBLIC-ICX-test:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    needs: ["linux-DG2-JIT-PUBLIC-ICX"]
    with:
      image: embree/ubuntu:22.04
      options: --device=/dev/dri:/dev/dri
      runs-on: '[ "Linux", "docker", "dg2" ]'
      project: embree
      env-from-files: ./.github/workflows/dpcpp-none.env ./.github/workflows/gfx-ubuntu22-public.env
      dpcpp-version: intel/2023.1
      artifact-in: linux-DG2-JIT-PUBLIC-ICX
      cmd: |
        scripts/test.py test --debug
        scripts/test.py test

  linux-DG2-JIT-PUBLIC-ICX-RC:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    with:
      image: embree/ubuntu:22.04
      runs-on: '[ "Linux", "docker", "build" ]'
      project: embree
      env-from-files: ./.github/workflows/dpcpp-none.env ./.github/workflows/gfx-ubuntu22-public.env
      dpcpp-version: icx/compiler_ppkg-rel/20230926
      artifact-out: linux-DG2-JIT-PUBLIC-ICX-RC
      artifact-path: ./build .ctest_conf
      cmd: |
        scripts/test.py configure platform:x64 compiler:ICX ispc:ispc1.21.0 isa:AVX512 build:RelWithAssert EMBREE_SYCL_SUPPORT:ON sycl:none tasking:TBB2021.10.0 intensity:4
        scripts/test.py build --debug
        scripts/test.py build

  linux-DG2-JIT-PUBLIC-ICX-RC-test:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    needs: ["linux-DG2-JIT-PUBLIC-ICX-RC"]
    with:
      image: embree/ubuntu:22.04
      options: --device=/dev/dri:/dev/dri
      runs-on: '[ "Linux", "docker", "dg2" ]'
      project: embree
      env-from-files: ./.github/workflows/dpcpp-none.env ./.github/workflows/gfx-ubuntu22-public.env
      dpcpp-version: icx/compiler_ppkg-rel/20230926
      artifact-in: linux-DG2-JIT-PUBLIC-ICX-RC
      cmd: |
        scripts/test.py test --debug
        scripts/test.py test

  linux-DG2-JIT-PUBLIC-sycl-nightly-RK:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    with:
      image: embree/ubuntu:22.04
      runs-on: '[ "Linux", "docker", "build" ]'
      project: embree
      env-from-files: ./.github/workflows/dpcpp-none.env ./.github/workflows/gfx-ubuntu22-public.env
      dpcpp-version: intel-llvm/nightly-2023-09-22-rk
      artifact-out: linux-DG2-JIT-PUBLIC-sycl-nightly-RK
      artifact-path: ./build .ctest_conf
      cmd: |
        scripts/test.py configure platform:x64 compiler:dpcpp ispc:ispc1.21.0 isa:AVX512 build:RelWithAssert EMBREE_SYCL_SUPPORT:ON sycl:none tasking:TBB2021.10.0 intensity:4
        scripts/test.py build --debug
        scripts/test.py build

  linux-DG2-JIT-PUBLIC-sycl-nightly-RK-test:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    needs: ["linux-DG2-JIT-PUBLIC-sycl-nightly-RK"]
    with:
      image: embree/ubuntu:22.04
      options: --device=/dev/dri:/dev/dri
      runs-on: '[ "Linux", "docker", "dg2" ]'
      project: embree
      env-from-files: ./.github/workflows/dpcpp-none.env ./.github/workflows/gfx-ubuntu22-public.env
      dpcpp-version: intel-llvm/nightly-2023-09-22-rk
      artifact-in: linux-DG2-JIT-PUBLIC-sycl-nightly-RK
      cmd: |
        scripts/test.py test --debug
        scripts/test.py test

  ########################################
  # Linux ATS-M
  ########################################

  linux-ATSM-JIT-PUBLIC-test:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    needs: ["linux-DG2-JIT-PUBLIC"]
    with:
      image: embree/ubuntu:22.04
      options: --device=/dev/dri:/dev/dri
      runs-on: '[ "Linux", "docker", "atsm" ]'
      project: embree
      env-from-files: ./.github/workflows/dpcpp-sycl-nightly.env ./.github/workflows/gfx-ubuntu22-public.env
      artifact-in: linux-DG2-JIT-PUBLIC
      cmd: |
        scripts/test.py test --debug
        scripts/test.py test


  ########################################
  # Linux PVC
  ########################################

  linux-PVC-JIT-INTERNAL:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    with:
      image: embree/ubuntu:22.04
      runs-on: '[ "Linux", "docker", "build" ]'
      project: embree
      env-from-files: ./.github/workflows/dpcpp-sycl-nightly.env ./.github/workflows/gfx-ubuntu22-embargo.env
      artifact-out: linux-PVC-JIT-INTERNAL
      artifact-path: ./build .ctest_conf
      cmd: |
        scripts/test.py configure platform:x64 compiler:dpcpp ispc:ispc1.16.1 isa:SSE2 build:RelWithAssert EMBREE_SYCL_SUPPORT:ON sycl:none tasking:TBB intensity:4
        scripts/test.py build --debug
        scripts/test.py build

  linux-PVC-1T-JIT-INTERNAL-test:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    needs: ["linux-PVC-JIT-INTERNAL"]
    with:
      image: embree/ubuntu:22.04
      options: --device=/dev/dri:/dev/dri
      runs-on: '[ "Linux", "docker", "pvc" ]'
      project: embree
      env-from-files: ./.github/workflows/dpcpp-sycl-nightly.env ./.github/workflows/gfx-ubuntu22-embargo.env
      artifact-in: linux-PVC-JIT-INTERNAL
      cmd: |
        export EnableImplicitScaling=0
        scripts/test.py test --debug
        scripts/test.py test

  linux-PVC-2T-JIT-INTERNAL-test:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    needs: ["linux-PVC-JIT-INTERNAL"]
    with:
      image: embree/ubuntu:22.04
      options: --device=/dev/dri:/dev/dri
      runs-on: '[ "Linux", "docker", "pvc" ]'
      project: embree
      env-from-files: ./.github/workflows/dpcpp-sycl-nightly.env ./.github/workflows/gfx-ubuntu22-embargo.env
      artifact-in: linux-PVC-JIT-INTERNAL
      cmd: |
        export EnableImplicitScaling=1
        scripts/test.py test --debug
        scripts/test.py test

#  linux-PVC-JIT-PUBLIC:
#    secrets: inherit
#    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
#    with:
#      image: embree/ubuntu:22.04
#      runs-on: '[ "Linux", "docker", "build" ]'
#      artifact-out: linux-PVC-JIT-PUBLIC
#      artifact-path: ./build .ctest_conf
#      cmd: |
#        scripts/test.py configure platform:x64 compiler:dpcpp ispc:ispc1.16.1 isa:SSE2 build:RelWithAssert EMBREE_SYCL_SUPPORT:ON sycl:none tasking:TBB intensity:4
#        scripts/test.py build --debug
#        scripts/test.py build
#
#  linux-PVC-JIT-PUBLIC-test:
#    secrets: inherit
#    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
#    needs: ["linux-PVC-JIT-PUBLIC"]
#    with:
#      image: embree/ubuntu:22.04
#      options: --device=/dev/dri:/dev/dri
#      runs-on: '[ "Linux", "docker", "pvc" ]'
#      artifact-in: linux-PVC-JIT-PUBLIC
#      cmd: |
#        scripts/test.py test --debug
#        scripts/test.py test


  ########################################
  # Windows DG2
  ########################################

  windows-DG2-JIT-INTERNAL:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/windows_gpu.yml@main
    with:
      runs-on: '[ "Windows", "NAS", "dg2" ]'
      project: embree
      env-from-files: ./.github/workflows/dpcpp-sycl-nightly.env ./.github/workflows/gfx-windows-internal.env
      cmd: |
        python scripts/test.py configure platform:x64 compiler:dpcpp isa:SSE2 build:Release EMBREE_SYCL_SUPPORT:ON sycl:none intensity:3
        python scripts/test.py build
        python scripts/test.py test

  windows-DG2-JIT-PUBLIC:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/windows_gpu.yml@main
    with:
      runs-on: '[ "Windows", "NAS", "dg2" ]'
      project: embree
      env-from-files: ./.github/workflows/dpcpp-sycl-nightly.env ./.github/workflows/gfx-windows-public.env
      cmd: |
        python scripts/test.py configure platform:x64 compiler:dpcpp isa:SSE2 build:Release EMBREE_SYCL_SUPPORT:ON sycl:none intensity:3
        python scripts/test.py build
        python scripts/test.py test

  windows-DG2-JIT-PUBLIC-ICX:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/windows_gpu.yml@main
    with:
      runs-on: '[ "Windows", "NAS", "dg2" ]'
      project: embree
      env-from-files: ./.github/workflows/dpcpp-none.env ./.github/workflows/gfx-windows-public.env
      dpcpp-version: oneAPI/compiler/2023.1.0
      cmd: |
        python scripts/test.py configure platform:x64 compiler:ICX ispc:ispc1.21.0 isa:AVX512 tasking:TBB2021.10.0 build:Release EMBREE_SYCL_SUPPORT:ON sycl:none intensity:2
        python scripts/test.py build
        python scripts/test.py test

  windows-DG2-JIT-PUBLIC-ICX-RC:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/windows_gpu.yml@main
    with:
      runs-on: '[ "Windows", "NAS", "dg2" ]'
      project: embree
      env-from-files: ./.github/workflows/dpcpp-none.env ./.github/workflows/gfx-windows-public.env
      dpcpp-version: icx/compiler_ppkg-rel/20230926
      cmd: |
        python scripts/test.py configure platform:x64 compiler:ICX ispc:ispc1.21.0 isa:AVX512 tasking:TBB2021.10.0 build:Release EMBREE_SYCL_SUPPORT:ON sycl:none intensity:2
        python scripts/test.py build
        python scripts/test.py test

  windows-DG2-JIT-PUBLIC-sycl-nightly-RK:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/windows_gpu.yml@main
    with:
      runs-on: '[ "Windows", "NAS", "dg2" ]'
      project: embree
      env-from-files: ./.github/workflows/dpcpp-none.env ./.github/workflows/gfx-windows-public.env
      dpcpp-version: intel-llvm/nightly-2023-09-22-rk
      cmd: |
        python scripts/test.py configure platform:x64 compiler:dpcpp ispc:ispc1.21.0 isa:AVX512 tasking:TBB2021.10.0 build:Release EMBREE_SYCL_SUPPORT:ON sycl:none intensity:2
        python scripts/test.py build
        python scripts/test.py test

  windows-DG2-JIT-INTERNAL-TBB2020_3:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/windows_gpu.yml@main
    with:
      runs-on: '[ "Windows", "NAS", "dg2" ]'
      project: embree
      env-from-files: ./.github/workflows/dpcpp-sycl-nightly.env ./.github/workflows/gfx-windows-internal.env
      cmd: |
        python scripts/test.py configure platform:x64 compiler:dpcpp isa:SSE2 build:Release EMBREE_SYCL_SUPPORT:ON sycl:none intensity:3 tasking:TBB2020.3
        python scripts/test.py build
        python scripts/test.py test

  ################################################################################
  ################################################################################
  # CPU tests
  ################################################################################
  ################################################################################

  ########################################
  # Linux
  ########################################

  linux-fedora29_ICX:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    with:
      image: embree/fedora:29
      runs-on: '[ "Linux", "docker", "avx512" ]'
      dpcpp-version: intel/2023.1
      cmd: |
        python scripts/test.py configure platform:x64 build:Debug compiler:ICX ispc:ispc1.13.0 isa:AVX512 frequency_level:simd256 tasking:TBB2021.2.0 intensity:2 maxinstancelevelcount:4
        python scripts/test.py build
        python scripts/test.py test
  #     python scripts/test.py test sde:hsw

  linux-fedora32-GCC:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    with:
      image: embree/fedora:32
      runs-on: '[ "Linux", "docker", "avx512" ]'
      cmd: |
        python scripts/test.py configure platform:x64 build:Debug compiler:GCC ispc:ispc1.13.0 isa:AVX512 tasking:TBB COMPACT_POLYS:ON MIN_WIDTH:ON intensity:2
        python scripts/test.py build
        python scripts/test.py test

  linux-fedora32_ICX:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    with:
      image: embree/fedora:32
      runs-on: '[ "Linux", "docker", "avx512" ]'
      dpcpp-version: intel/2023.1
      cmd: |
        python scripts/test.py configure platform:x64 build:Debug compiler:ICX ispc:ispc1.13.0 isa:AVX512 frequency_level:simd256 tasking:TBB2021.10.0 intensity:2 maxinstancelevelcount:4
        python scripts/test.py build
        python scripts/test.py test

  linux-fedora26_CLANG4:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
    with:
      image: embree/fedora:26
      runs-on: '[ "Linux", "docker", "avx512" ]'
      cmd: |
        python scripts/test.py configure platform:x64 build:Debug compiler:CLANG4.0.0 ispc:ispc1.17.0 isa:AVX512 frequency_level:simd128 tasking:TBB2021.2.0 GLFW:OFF intensity:2
        python scripts/test.py build
        python scripts/test.py test

  linux-fedora26_CLANG5-INT-ADDRSANITIZER:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
    with:
      image: embree/fedora:26
      runs-on: '[ "Linux", "docker", "build" ]'
      cmd: |
        python scripts/test.py configure platform:x64 build:Debug compiler:CLANG5.0.0 ispc:ispc1.17.0 isa:AVX tasking:INT intensity:1 addrsanitizer:ON
        python scripts/test.py build
        python scripts/test.py test

  linux-ubuntu20_04-GCC-NAMESPACE:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
    with:
      image: embree/ubuntu:20.04
      runs-on: '[ "Linux", "docker", "build" ]'
      cmd: |
        python scripts/test.py configure platform:x64 build:Debug compiler:GCC ispc:ispc1.13.0 isa:AVX2 frequency_level:simd256 tasking:TBB intensity:1 api_namespace:myembree
        python scripts/test.py build
        python scripts/test.py test

  linux-ubuntu20_04-ICX:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    with:
      image: embree/ubuntu:20.04
      runs-on: '[ "Linux", "docker", "avx512" ]'
      dpcpp-version: intel/2023.1
      cmd: |
        python scripts/test.py configure platform:x64 build:Release threads:4 compiler:ICX ispc:ispc1.17.0 isa:AVX512 frequency_level:simd256 tasking:TBB2021.5.0 intensity:2
        python scripts/test.py build
        python scripts/test.py test

  linux-ubuntu20_04-ICX-RC:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    with:
      image: embree/ubuntu:20.04
      runs-on: '[ "Linux", "docker", "avx512" ]'
      dpcpp-version: icx/compiler_ppkg-rel/20230926
      cmd: |
        module load cmake/3.25.3
        scripts/test.py configure platform:x64 build:Release threads:4 compiler:ICX ispc:ispc1.17.0 isa:AVX512 frequency_level:simd256 tasking:TBB2021.5.0 intensity:2
        scripts/test.py build
        scripts/test.py test

  linux-centos7_4-GCC:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
    with:
      image: embree/centos:7.4
      runs-on: '[ "Linux", "docker", "build" ]'
      cmd: |
        python scripts/test.py configure platform:x64 build:Debug compiler:GCC ispc:ispc1.17.0 isa:AVX2 frequency_level:simd128 tasking:TBB intensity:1
        python scripts/test.py build
        python scripts/test.py test


  ########################################
  # Windows
  ########################################
  windows-V142:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/windows_gpu.yml@main
    with:
      runs-on: '[ "Windows", "NAS", "build" ]'
      dpcpp-version: none
      cmd: |
        python scripts/test.py configure platform:x64 build:RelWithDebInfo compiler:V142 ispc:ispc1.21.0 isa:SSE2 tasking:TBB2021.10.0 intensity:2 maxinstancelevelcount:8
        python scripts/test.py build
        python scripts/test.py test

  windows-ICX:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/windows_gpu.yml@main
    with:
      runs-on: '[ "Windows", "NAS", "build", "avx512" ]'
      dpcpp-version: oneAPI/compiler/2023.1.0
      cmd: |
        python scripts/test.py configure platform:x64 build:RelWithDebInfo compiler:ICX ispc:ispc1.17.0 isa:AVX512 tasking:TBB2021.5.0 threads:16 intensity:2
        python scripts/test.py build
        python scripts/test.py test

  windows-ICX-RC:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/windows_gpu.yml@main
    with:
      runs-on: '[ "Windows", "NAS", "build", "avx512" ]'
      dpcpp-version: icx/compiler_ppkg-rel/20230926
      cmd: |
        python scripts/test.py configure platform:x64 build:RelWithDebInfo compiler:ICX ispc:ispc1.17.0 isa:AVX512 tasking:TBB2021.5.0 threads:16 intensity:2
        python scripts/test.py build
        python scripts/test.py test

  ################################################################################
  ################################################################################
  # CPU tests
  ################################################################################
  ################################################################################


  ########################################
  # MacOS
  ########################################

  macosx-ARM-NEON-AVX2:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/macos.yml@main
    with:
      runs-on: '[ "macOS", "build", "arm" ]'
      cmd: |
        scripts/test.py configure platform:arm64 build:Debug compiler:CLANG ispc:ispc1.17.0 isa:NEON2X tasking:TBB_HOMEBREW intensity:2
        scripts/test.py build
        scripts/test.py test

  macosx-x64-CLANG:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/macos.yml@main
    with:
      runs-on: '[ "macOS", "build", "x86_64" ]'
      cmd: |
        scripts/test.py configure platform:x64 build:Debug compiler:CLANG ispc:ispc1.21.0 isa:SSE2 tasking:TBB2021.1.1 intensity:2
        scripts/test.py build
        scripts/test.py test

  ########################################
  # Coverity
  ########################################

  static-analysis:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/static_analysis.yml@tgt/coverity-env
    with:
      project: Embree
      submodules: true
      coverity: true
      prebuild: >
        source scripts/cmake-presets/linux-env.sh &&
        $CMAKE_EXE --preset linux-coverity
      build: sh scripts/coverity.sh

  success:
    runs-on: ubuntu-latest
    needs:
      - linux-DG2-JIT-INTERNAL-test
      - linux-DG2-JIT-PUBLIC-test
      - linux-ATSM-JIT-PUBLIC-test
      - linux-DG2-JIT-EMBARGO-test
      - linux-DG2-JIT-PUBLIC-ICX-test
      - linux-DG2-JIT-PUBLIC-ICX-RC-test
      - linux-DG2-JIT-PUBLIC-sycl-nightly-RK-test
      - linux-PVC-1T-JIT-INTERNAL-test
      - linux-PVC-2T-JIT-INTERNAL-test
      - windows-DG2-JIT-INTERNAL
      - windows-DG2-JIT-PUBLIC
      - windows-DG2-JIT-PUBLIC-ICX
      - windows-DG2-JIT-PUBLIC-ICX-RC
      - windows-DG2-JIT-INTERNAL-TBB2020_3
      - windows-DG2-JIT-PUBLIC-sycl-nightly-RK
      - linux-fedora29_ICX
      - linux-fedora32-GCC
      - linux-fedora32_ICX
      - linux-fedora26_CLANG4
      - linux-fedora26_CLANG5-INT-ADDRSANITIZER
      - linux-ubuntu20_04-GCC-NAMESPACE
      - linux-ubuntu20_04-ICX
      - linux-ubuntu20_04-ICX-RC
      - linux-centos7_4-GCC
      - windows-V142
      - windows-ICX
      - windows-ICX-RC
      - macosx-ARM-NEON-AVX2
      - macosx-x64-CLANG
      - static-analysis
    if: failure() || cancelled()
    steps:
      - name: Failure
        run: |
          echo "::notice title=Success::Workflow failed"
          exit 1
