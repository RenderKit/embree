## Copyright 2022 Intel Corporation
## SPDX-License-Identifier: Apache-2.0

name: integrate

# same as nightly...
on:
  schedule:
    - cron:  '00 00 * * *'
  workflow_dispatch:

jobs:
#####################################################################
# Integration Tests
####################################################################

# TODO: investigate windows integration tests not working
#####################################################################
## Windows
#####################################################################
#  integrate-windows-ICX:
#    secrets: inherit
#    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/windows_gpu.yml@main
#    with:
#      runs-on: '[ "Windows", "NAS", "build", "avx512" ]'
#      artifact-out: integrate-windows-ICX
#      artifact-path: ./build/embree-*.zip
#      dpcpp-version: oneAPI/compiler/2024.0
#      cmd: |
#        cmake --preset integrate-windows-icx
#        cmake --build build --config Release --target package -j8
#        cmake --build build --config Release --target post_package
#
#  integrate-windows-ICX-test:
#    secrets: inherit
#    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/windows_gpu.yml@main
#    needs: ["integrate-windows-ICX"]
#    with:
#      runs-on: '[ "Windows", "NAS", "build", "avx512" ]'
#      artifact-in: integrate-windows-ICX
#      dpcpp-version: oneAPI/compiler/2024.0
#      cmd: |
#        cd build
#        . ..\tests\integration\test_embree_release\unpack-windows.ps1
#        cd ..\tests\integration\test_embree_release
#        cmake --preset test-windows-icx
#        cmake --build build --config Release
#        .\build\test.exe
#        
#
#
#
#
#  integrate-windows-v142:
#    secrets: inherit
#    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/windows.yml@main
#    with:
#      runs-on: '[ "Windows", "NAS", "build", "avx512" ]'
#      artifact-out: integrate-windows-v142
#      artifact-path: ./build/embree-*.zip
#      cmd: |
#        cmake --preset integrate-windows-v142
#        cmake --build build --config Release --target package -j8
#        cmake --build build --config Release --target post_package
#
#  integrate-windows-v142-test-v142:
#    secrets: inherit
#    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/windows.yml@main
#    needs: ["integrate-windows-v142"]
#    with:
#      runs-on: '[ "Windows", "NAS", "build", "avx512" ]'
#      artifact-in: integrate-windows-v142
#      cmd: |
#        cd build
#        . ..\tests\integration\test_embree_release\unpack-windows.ps1
#        cd ..\tests\integration\test_embree_release
#        cmake --preset test-windows-v142
#        cmake --build build --config Release
#        .\build\Release\test.exe
#
#  integrate-windows-v142-test-ICX:
#    secrets: inherit
#    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/windows_gpu.yml@main
#    needs: ["integrate-windows-v142"]
#    with:
#      runs-on: '[ "Windows", "NAS", "build", "avx512" ]'
#      artifact-in: integrate-windows-v142
#      dpcpp-version: oneAPI/compiler/2024.0
#      cmd: |
#        cd build
#        . ..\tests\integration\test_embree_release\unpack-windows.ps1
#        cd ..\tests\integration\test_embree_release
#        cmake --preset test-windows-icx
#        cmake --build build --config Release
#        .\build\test.exe
#        
#
#
#
#
#####################################################################
## Windows STATIC
#####################################################################
#  integrate-static-windows-ICX:
#    secrets: inherit
#    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/windows_gpu.yml@main
#    with:
#      runs-on: '[ "Windows", "NAS", "build", "avx512" ]'
#      artifact-out: integrate-static-windows-ICX
#      artifact-path: ./build/embree-*.zip
#      dpcpp-version: oneAPI/compiler/2024.0
#      cmd: |
#        cmake --preset integrate-static-windows-icx
#        cmake --build build --config Release --target package -j8
#        cmake --build build --config Release --target post_package
#
#  integrate-static-windows-ICX-test:
#    secrets: inherit
#    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/windows_gpu.yml@main
#    needs: ["integrate-static-windows-ICX"]
#    with:
#      runs-on: '[ "Windows", "NAS", "build", "avx512" ]'
#      artifact-in: integrate-static-windows-ICX
#      dpcpp-version: oneAPI/compiler/2024.0
#      cmd: |
#        cd build
#        . ..\tests\integration\test_embree_release\unpack-windows.ps1
#        cd ..\tests\integration\test_embree_release
#        cmake --preset test-windows-icx
#        cmake --build build --config Release
#        .\build\test.exe
#        
#
#
#
#
#  integrate-static-windows-v142:
#    secrets: inherit
#    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/windows.yml@main
#    with:
#      runs-on: '[ "Windows", "NAS", "build", "avx512" ]'
#      artifact-out: integrate-static-windows-v142
#      artifact-path: ./build/embree-*.zip
#      cmd: |
#        cmake --preset integrate-windows-v142
#        cmake --build build --config Release --target package -j8
#        cmake --build build --config Release --target post_package
#
#  integrate-static-windows-v142-test-v142:
#    secrets: inherit
#    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/windows.yml@main
#    needs: ["integrate-static-windows-v142"]
#    with:
#      runs-on: '[ "Windows", "NAS", "build", "avx512" ]'
#      artifact-in: integrate-static-windows-v142
#      cmd: |
#        cd build
#        . ..\tests\integration\test_embree_release\unpack-windows.ps1
#        cd ..\tests\integration\test_embree_release
#        cmake --preset test-windows-v142
#        cmake --build build --config Release
#        .\build\Release\test.exe
#
#  integrate-static-windows-v142-test-ICX:
#    secrets: inherit
#    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/windows_gpu.yml@main
#    needs: ["integrate-static-windows-v142"]
#    with:
#      runs-on: '[ "Windows", "NAS", "build", "avx512" ]'
#      artifact-in: integrate-static-windows-v142
#      dpcpp-version: oneAPI/compiler/2024.0
#      cmd: |
#        cd build
#        . ..\tests\integration\test_embree_release\unpack-windows.ps1
#        cd ..\tests\integration\test_embree_release
#        cmake --preset test-windows-icx
#        cmake --build build --config Release
#        .\build\test.exe





####################################################################
# Linux
####################################################################
  integrate-linux-GCC:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
    with:
      image: embree/rockylinux:8.7
      runs-on: '[ "Linux", "docker", "avx512" ]'
      artifact-out: integrate-linux-GCC
      artifact-path: ./build/*.tar.gz
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-linux-gcc -DCMAKE_BUILD_TYPE=Release
        cmake --build build --config Release --target build

  integrate-linux-GCC-test-GCC:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
    needs: [ "integrate-linux-GCC" ]
    with:
      image: embree/rockylinux:8.7
      runs-on: '[ "Linux", "docker", "avx512" ]'
      artifact-in: integrate-linux-GCC
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-linux-gcc -DCMAKE_BUILD_TYPE=Release -DEMBREE_TESTING_INTEGRATION_PRESET=test-linux-gcc
        cmake --build build --config Release --target test_integration

  integrate-linux-GCC-test-CLANG:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
    needs: [ "integrate-linux-GCC" ]
    with:
      image: embree/rockylinux:8.7
      runs-on: '[ "Linux", "docker", "avx512" ]'
      artifact-in: integrate-linux-GCC
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-linux-gcc -DCMAKE_BUILD_TYPE=Release -DEMBREE_TESTING_INTEGRATION_PRESET=test-linux-clang
        cmake --build build --config Release --target test_integration

  integrate-linux-GCC-test-ICX:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    needs: [ "integrate-linux-GCC" ]
    with:
      image: embree/rockylinux:8.7
      runs-on: '[ "Linux", "docker", "avx512" ]'
      dpcpp-version: intel/2024.0
      artifact-in: integrate-linux-GCC
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-linux-gcc -DCMAKE_BUILD_TYPE=Release -DEMBREE_TESTING_INTEGRATION_PRESET=test-linux-icx
        cmake --build build --config Release --target test_integration
        




  integrate-linux-ICX:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    with:
      image: embree/rockylinux:8.7
      runs-on: '[ "Linux", "docker", "avx512" ]'
      dpcpp-version: intel/2024.0
      artifact-out: integrate-linux-ICX
      artifact-path: ./build/*.tar.gz
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-linux-icx -DCMAKE_BUILD_TYPE=Release
        cmake --build build --config Release --target build

  integrate-linux-ICX-test-GCC:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
    needs: [ "integrate-linux-ICX" ]
    with:
      image: embree/rockylinux:8.7
      runs-on: '[ "Linux", "docker", "avx512" ]'
      artifact-in: integrate-linux-ICX
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-linux-gcc -DCMAKE_BUILD_TYPE=Release -DEMBREE_TESTING_INTEGRATION_PRESET=test-linux-gcc
        cmake --build build --config Release --target test_integration

  integrate-linux-ICX-test-CLANG:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    needs: [ "integrate-linux-ICX" ]
    with:
      image: embree/rockylinux:8.7
      runs-on: '[ "Linux", "docker", "avx512" ]'
      dpcpp-version: intel/2024.0
      artifact-in: integrate-linux-ICX
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-linux-icx -DCMAKE_BUILD_TYPE=Release -DEMBREE_TESTING_INTEGRATION_PRESET=test-linux-clang
        cmake --build build --config Release --target test_integration

  integrate-linux-ICX-test-ICX:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    needs: [ "integrate-linux-ICX" ]
    with:
      image: embree/rockylinux:8.7
      runs-on: '[ "Linux", "docker", "avx512" ]'
      dpcpp-version: intel/2024.0
      artifact-in: integrate-linux-ICX
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-linux-icx -DCMAKE_BUILD_TYPE=Release -DEMBREE_TESTING_INTEGRATION_PRESET=test-linux-icx
        cmake --build build --config Release --target test_integration
        




  integrate-static-linux-CLANG:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
    with:
      image: embree/rockylinux:8.7
      runs-on: '[ "Linux", "docker", "avx512" ]'
      artifact-out: integrate-static-linux-CLANG
      artifact-path: ./build/*.tar.gz
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-static-linux-clang -DCMAKE_BUILD_TYPE=Release
        cmake --build build --config Release --target build

  integrate-static-linux-CLANG-test-GCC:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
    needs: [ "integrate-static-linux-CLANG" ]
    with:
      image: embree/rockylinux:8.7
      runs-on: '[ "Linux", "docker", "avx512" ]'
      artifact-in: integrate-static-linux-CLANG
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-static-linux-clang -DCMAKE_BUILD_TYPE=Release -DEMBREE_TESTING_INTEGRATION_PRESET=test-linux-gcc
        cmake --build build --config Release --target test_integration

  integrate-static-linux-CLANG-test-CLANG:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
    needs: [ "integrate-static-linux-CLANG" ]
    with:
      image: embree/rockylinux:8.7
      runs-on: '[ "Linux", "docker", "avx512" ]'
      artifact-in: integrate-static-linux-CLANG
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-static-linux-clang -DCMAKE_BUILD_TYPE=Release -DEMBREE_TESTING_INTEGRATION_PRESET=test-linux-clang
        cmake --build build --config Release --target test_integration

  integrate-static-linux-CLANG-test-ICX:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    needs: [ "integrate-static-linux-CLANG" ]
    with:
      image: embree/rockylinux:8.7
      runs-on: '[ "Linux", "docker", "avx512" ]'
      dpcpp-version: intel/2024.0
      artifact-in: integrate-static-linux-CLANG
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-static-linux-clang -DCMAKE_BUILD_TYPE=Release -DEMBREE_TESTING_INTEGRATION_PRESET=test-linux-icx
        cmake --build build --config Release --target test_integration
        




####################################################################
# Linux STATIC
####################################################################
  integrate-static-linux-GCC:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
    with:
      image: embree/rockylinux:8.7
      runs-on: '[ "Linux", "docker", "avx512" ]'
      artifact-out: integrate-static-linux-GCC
      artifact-path: ./build/*.tar.gz
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-static-linux-gcc -DCMAKE_BUILD_TYPE=Release
        cmake --build build --config Release --target build

  integrate-static-linux-GCC-test-GCC:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
    needs: [ "integrate-static-linux-GCC" ]
    with:
      image: embree/rockylinux:8.7
      runs-on: '[ "Linux", "docker", "avx512" ]'
      artifact-in: integrate-static-linux-GCC
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-static-linux-gcc -DCMAKE_BUILD_TYPE=Release -DEMBREE_TESTING_INTEGRATION_PRESET=test-linux-gcc
        cmake --build build --config Release --target test_integration

  integrate-static-linux-GCC-test-CLANG:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
    needs: [ "integrate-static-linux-GCC" ]
    with:
      image: embree/rockylinux:8.7
      runs-on: '[ "Linux", "docker", "avx512" ]'
      artifact-in: integrate-static-linux-GCC
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-static-linux-gcc -DCMAKE_BUILD_TYPE=Release -DEMBREE_TESTING_INTEGRATION_PRESET=test-linux-clang
        cmake --build build --config Release --target test_integration

  integrate-static-linux-GCC-test-ICX:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    needs: [ "integrate-static-linux-GCC" ]
    with:
      image: embree/rockylinux:8.7
      runs-on: '[ "Linux", "docker", "avx512" ]'
      dpcpp-version: intel/2024.0
      artifact-in: integrate-static-linux-GCC
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-static-linux-gcc -DCMAKE_BUILD_TYPE=Release -DEMBREE_TESTING_INTEGRATION_PRESET=test-linux-icx
        cmake --build build --config Release --target test_integration





  integrate-static-linux-ICX:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    with:
      image: embree/rockylinux:8.7
      runs-on: '[ "Linux", "docker", "avx512" ]'
      dpcpp-version: intel/2024.0
      artifact-out: integrate-static-linux-ICX
      artifact-path: ./build/*.tar.gz
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-static-linux-icx -DCMAKE_BUILD_TYPE=Release
        cmake --build build --config Release --target build

  integrate-static-linux-ICX-test-GCC:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    needs: [ "integrate-static-linux-ICX" ]
    with:
      image: embree/rockylinux:8.7
      runs-on: '[ "Linux", "docker", "avx512" ]'
      dpcpp-version: intel/2024.0
      artifact-in: integrate-static-linux-ICX
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-static-linux-icx -DCMAKE_BUILD_TYPE=Release -DEMBREE_TESTING_INTEGRATION_PRESET=test-linux-gcc
        cmake --build build --config Release --target test_integration

  integrate-static-linux-ICX-test-CLANG:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    needs: [ "integrate-static-linux-ICX" ]
    with:
      image: embree/rockylinux:8.7
      runs-on: '[ "Linux", "docker", "avx512" ]'
      dpcpp-version: intel/2024.0
      artifact-in: integrate-static-linux-ICX
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-static-linux-icx -DCMAKE_BUILD_TYPE=Release -DEMBREE_TESTING_INTEGRATION_PRESET=test-linux-clang
        cmake --build build --config Release --target test_integration

  integrate-static-linux-ICX-test-ICX:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    needs: [ "integrate-static-linux-ICX" ]
    with:
      image: embree/rockylinux:8.7
      runs-on: '[ "Linux", "docker", "avx512" ]'
      dpcpp-version: intel/2024.0
      artifact-in: integrate-static-linux-ICX
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-static-linux-icx -DCMAKE_BUILD_TYPE=Release -DEMBREE_TESTING_INTEGRATION_PRESET=test-linux-icx
        cmake --build build --config Release --target test_integration
        




  integrate-linux-CLANG:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
    with:
      image: embree/rockylinux:8.7
      runs-on: '[ "Linux", "docker", "avx512" ]'
      artifact-out: integrate-linux-CLANG
      artifact-path: ./build/*.tar.gz
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-linux-clang -DCMAKE_BUILD_TYPE=Release
        cmake --build build --config Release --target build

  integrate-linux-CLANG-test-GCC:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
    needs: [ "integrate-linux-CLANG" ]
    with:
      image: embree/rockylinux:8.7
      runs-on: '[ "Linux", "docker", "avx512" ]'
      artifact-in: integrate-linux-CLANG
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-linux-clang -DCMAKE_BUILD_TYPE=Release -DEMBREE_TESTING_INTEGRATION_PRESET=test-linux-gcc
        cmake --build build --config Release --target test_integration

  integrate-linux-CLANG-test-CLANG:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker.yml@main
    needs: [ "integrate-linux-CLANG" ]
    with:
      image: embree/rockylinux:8.7
      runs-on: '[ "Linux", "docker", "avx512" ]'
      artifact-in: integrate-linux-CLANG
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-linux-clang -DCMAKE_BUILD_TYPE=Release -DEMBREE_TESTING_INTEGRATION_PRESET=test-linux-clang
        cmake --build build --config Release --target test_integration

  integrate-linux-CLANG-test-ICX:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    needs: [ "integrate-linux-CLANG" ]
    with:
      image: embree/rockylinux:8.7
      runs-on: '[ "Linux", "docker", "avx512" ]'
      dpcpp-version: intel/2024.0
      artifact-in: integrate-linux-CLANG
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-linux-clang -DCMAKE_BUILD_TYPE=Release -DEMBREE_TESTING_INTEGRATION_PRESET=test-linux-icx
        cmake --build build --config Release --target test_integration





####################################################################
# Linux SYCL
####################################################################
  integrate-sycl-linux-ICX:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    with:
      image: embree/ubuntu:22.04
      project: embree
      env-from-files: ./.github/workflows/dpcpp-none.env ./.github/workflows/gfx-ubuntu22-public.env
      dpcpp-version: icx/compiler_ppkg-rel/20240110
      artifact-out: integrate-sycl-linux-ICX
      artifact-path: ./build/*.tar.gz
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-sycl-linux-icx -DCMAKE_BUILD_TYPE=Release
        cmake --build build --config Release --target build

  integrate-sycl-linux-ICX-test:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    needs: [ "integrate-sycl-linux-ICX" ]
    with:
      image: embree/ubuntu:22.04
      options: --device=/dev/dri:/dev/dri
      runs-on: '[ "Linux", "docker", "dg2" ]'
      project: embree
      env-from-files: ./.github/workflows/dpcpp-none.env ./.github/workflows/gfx-ubuntu22-public.env
      dpcpp-version: icx/compiler_ppkg-rel/20240110
      artifact-in: integrate-sycl-linux-ICX
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-sycl-linux-icx -DCMAKE_BUILD_TYPE=Release -DEMBREE_TESTING_INTEGRATION_PRESET=test-linux-icx
        cmake --build build --config Release --target test_integration
        




  integrate-sycl-linux-DPCPP:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    with:
      image: embree/ubuntu:22.04
      project: embree
      env-from-files: ./.github/workflows/dpcpp-none.env ./.github/workflows/gfx-ubuntu22-public.env
      dpcpp-version: intel-llvm/nightly-2023-09-22-rk
      artifact-out: integrate-sycl-linux-DPCPP
      artifact-path: ./build/*.tar.gz
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-sycl-linux-dpcpp -DCMAKE_BUILD_TYPE=Release
        cmake --build build --config Release --target build

  istegrate-sycl-linux-DPCPP-test:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/docker_gpu.yml@main
    needs: [ "integrate-sycl-linux-DPCPP" ]
    with:
      image: embree/ubuntu:22.04
      options: --device=/dev/dri:/dev/dri
      runs-on: '[ "Linux", "docker", "dg2" ]'
      project: embree
      env-from-files: ./.github/workflows/dpcpp-none.env ./.github/workflows/gfx-ubuntu22-public.env
      dpcpp-version: icx/compiler_ppkg-rel/20240110
      artifact-in: integrate-sycl-linux-DPCPP
      cmd: |
        module load cmake/3.25.3
        cmake --preset integrate-sycl-linux-dpcpp -DCMAKE_BUILD_TYPE=Release -DEMBREE_TESTING_INTEGRATION_PRESET=test-linux-icx
        cmake --build build --config Release --target test_integration
        




####################################################################
# MacOS
####################################################################
  integrate-macos-GCC:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/macos.yml@main
    with:
      runs-on: '[ "macOS", "build", "x86_64" ]'
      artifact-out: integrate-macos-GCC
      artifact-path: ./build/*.zip
      cmd: |
        cmake --preset integrate-macos-gcc -DCMAKE_BUILD_TYPE=Release
        cmake --build build --config Release --target build
#        cmake --build build --config Release --target post_package_notarize     TODO: reactivate this when notarization problems are solved

  integrate-macos-GCC-test-GCC:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/macos.yml@main
    needs: [ "integrate-macos-GCC" ]
    with:
      runs-on: '[ "macOS", "build", "x86_64" ]'
      artifact-in: integrate-macos-GCC
      cmd: |
        cmake --preset integrate-macos-gcc -DCMAKE_BUILD_TYPE=Release -DEMBREE_TESTING_INTEGRATION_PRESET=test-macos-gcc
        cmake --build build --config Release --target test_integration

  integrate-macos-GCC-test-CLANG:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/macos.yml@main
    needs: [ "integrate-macos-GCC" ]
    with:
      runs-on: '[ "macOS", "build", "x86_64" ]'
      artifact-in: integrate-macos-GCC
      cmd: |
        cmake --preset integrate-macos-gcc -DCMAKE_BUILD_TYPE=Release -DEMBREE_TESTING_INTEGRATION_PRESET=test-macos-clang
        cmake --build build --config Release --target test_integration
      




#  TODO: cant find tbb/tbb.h ???
  integrate-macos-CLANG:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/macos.yml@main
    with:
      runs-on: '[ "macOS", "build", "x86_64" ]'
      artifact-out: integrate-macos-CLANG
      artifact-path: ./build/*.zip
      cmd: |
        cmake --preset integrate-macos-clang -DCMAKE_BUILD_TYPE=Release
        cmake --build build --config Release --target build
#        cmake --build build --config Release --target post_package_notarize     TODO: reactivate this when notarization problems are solved

  integrate-macos-CLANG-test-GCC:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/macos.yml@main
    needs: [ "integrate-macos-CLANG" ]
    with:
      runs-on: '[ "macOS", "build", "x86_64" ]'
      artifact-in: integrate-macos-CLANG
      cmd: |
        cmake --preset integrate-macos-clang -DCMAKE_BUILD_TYPE=Release -DEMBREE_TESTING_INTEGRATION_PRESET=test-macos-gcc
        cmake --build build --config Release --target test_integration

  integrate-macos-CLANG-test-CLANG:
    secrets: inherit
    uses: intel-innersource/libraries.devops.renderkit.workflows/.github/workflows/macos.yml@main
    needs: [ "integrate-macos-CLANG" ]
    with:
      runs-on: '[ "macOS", "build", "x86_64" ]'
      artifact-in: integrate-macos-CLANG
      cmd: |
        cmake --preset integrate-macos-clang -DCMAKE_BUILD_TYPE=Release -DEMBREE_TESTING_INTEGRATION_PRESET=test-macos-clang
        cmake --build build --config Release --target test_integration
