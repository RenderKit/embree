## Copyright 2024 Intel Corporation
## SPDX-License-Identifier: Apache-2.0

name: Continuous

on:
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: read-all

#        echo "Installing build dependencies..."
#        dnf install epel-release sudo gcc-c++ clang vim wget tar git-lfs nc make tbb-devel ImageMagick freeglut-devel glfw-devel libXmu-devel libXi-devel python3 cmake libXcursor-devel libXi-devel libXinerama-devel libXrandr-devel ncurses-compat-libs environment-modules ncurses-compat-libs environment-modules ninja build
#        dnf group install "Development Tools" -y
jobs:
  rocky-8-gcc-tbb-sse2:
    runs-on: ubuntu-latest
    container:
      image: rockylinux:8

    steps:
    - name: Install packages
      run: |
        yum -y install epel-release
        yum -y install gcc-c++ tar git-lfs make tbb-devel freeglut-devel glfw-devel libXmu-devel libXi-devel python3
        yum -y install cmake
        yum -y install libXcursor-devel libXi-devel libXinerama-devel libXrandr-devel
        yum -y install ncurses-compat-libs 
        yum -y install environment-modules

        dnf makecache --refresh
        dnf config-manager --set-enabled powertools
        dnf -y update
        dnf -y install ninja-build

    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Build and Test embree
      run: |
        cmake --preset public-gcc-tbb-sse2 -DEMBREE_TESTING_INTENSITY=3
        cmake --build build --target build
        cmake --build build --target test_package

    - name: Dump test image
      if: always()
      run: |
        mkdir dump
        ./build/embree_install/bin/embree_viewer "-i ./build/embree_install/testing/tests/primitives/curves_bezier_normal_oriented_mblur.xml" "-o ./dump/curves_bezier_normal_mblur.png" "--compare ./build/embree_install/testing/tests/primitives/curves_bezier_normal_oriented_mblur.xml.embree_viewer_primID.exr" "--shader" "primID" "--time" "0.5" "--compare-threshold" "55"

    - name: Upload Artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: rocky-8-gcc-tbb-sse2
        path: dump


  rocky-8-gcc-tbb-avx2:
    runs-on: ubuntu-latest
    container:
      image: rockylinux:8

    steps:
    - name: Install packages
      run: |
        yum -y install epel-release
        yum -y install gcc-c++ tar git-lfs make tbb-devel freeglut-devel glfw-devel libXmu-devel libXi-devel python3
        yum -y install cmake
        yum -y install libXcursor-devel libXi-devel libXinerama-devel libXrandr-devel
        yum -y install ncurses-compat-libs 
        yum -y install environment-modules

        dnf makecache --refresh
        dnf config-manager --set-enabled powertools
        dnf -y update
        dnf -y install ninja-build

    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Build and Test embree
      run: |
        cmake --preset public-gcc-tbb-avx2 -DEMBREE_TESTING_INTENSITY=3
        cmake --build build --target build
        cmake --build build --target test_package


  rocky-8-gcc-tbb-avx512:
    runs-on: ubuntu-latest
    container:
      image: rockylinux:8

    steps:
    - name: Install packages
      run: |
        yum -y install epel-release
        yum -y install gcc-c++ tar git-lfs make tbb-devel freeglut-devel glfw-devel libXmu-devel libXi-devel python3
        yum -y install cmake
        yum -y install libXcursor-devel libXi-devel libXinerama-devel libXrandr-devel
        yum -y install ncurses-compat-libs 
        yum -y install environment-modules

        dnf makecache --refresh
        dnf config-manager --set-enabled powertools
        dnf -y update
        dnf -y install ninja-build

    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Build and Test embree
      run: |
        cmake --preset public-gcc-tbb-avx512 -DEMBREE_TESTING_INTENSITY=3
        cmake --build build --target build
        cmake --build build --target test_package


#  rocky-8-clang-tbb-sse2:
#    runs-on: ubuntu-latest
#    container:
#      image: rockylinux:8
#
#    steps:
#    - name: Install packages
#      run: |
#        yum -y install epel-release
#        yum -y install gcc-c++ clang wget tar git-lfs nc make tbb-devel ImageMagick freeglut-devel glfw-devel libXmu-devel libXi-devel python3
#        yum -y install cmake
#        yum -y install libXcursor-devel libXi-devel libXinerama-devel libXrandr-devel
#        yum -y install ncurses-compat-libs 
#        yum -y install environment-modules
#
#        dnf makecache --refresh
#        dnf config-manager --set-enabled powertools
#        dnf -y update
#        dnf -y install ninja-build
#
#    - name: Checkout Repository
#      uses: actions/checkout@v4
#      with:
#        submodules: true
#
#    - name: Build and Test embree
#      run: |
#        cmake --preset public-gcc-tbb-sse2 -DEMBREE_TESTING_INTENSITY=3
#        cmake --build build --target build
#        cmake --build build --target test_package
#
#    - name: Dump test image
#      if: always()
#      run: |
#        mkdir dump
#        ./build/embree_install/bin/embree_viewer "-i ./build/embree_install/testing/tests/primitives/curves_bezier_normal_oriented_mblur.xml" "-o ./dump/curves_bezier_normal_mblur.png" "--compare ./build/embree_install/testing/tests/primitives/curves_bezier_normal_oriented_mblur.xml.embree_viewer_primID.exr" "--shader" "primID" "--time" "0.5" "--compare-threshold" "55"
#
#    - name: Upload Artifact
#      if: always()
#      uses: actions/upload-artifact@v4
#      with:
#        name: rocky-8-gcc-tbb-sse2
#        path: dump