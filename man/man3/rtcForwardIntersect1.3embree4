.\" Automatically generated by Pandoc 3.1.3
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "rtcForwardIntersect1/Ex" "3" "" "" "Embree Ray Tracing Kernels 4"
.hy
.SS NAME
.IP
.nf
\f[C]
rtcForwardIntersect1/Ex - forwards a single ray to new scene
  from user geometry callback
\f[R]
.fi
.SS SYNOPSIS
.IP
.nf
\f[C]
#include <embree4/rtcore.h>

void rtcForwardIntersect1(
  const struct RTCIntersectFunctionNArguments* args,
  RTCScene scene,
  struct RTCRay* ray,
  unsigned int instID
);

void rtcForwardIntersect1Ex(
  const struct RTCIntersectFunctionNArguments* args,
  RTCScene scene,
  struct RTCRay* ray,
  unsigned int instID,
  unsigned int instPrimID,
);
\f[R]
.fi
.SS DESCRIPTION
.PP
The \f[V]rtcForwardIntersect1\f[R] and \f[V]rtcForwardIntersect1Ex\f[R]
functions forward the traversal of a transformed ray (\f[V]ray\f[R]
argument) into a scene (\f[V]scene\f[R] argument) from a user geometry
callback.
The function can only get invoked from a user geometry callback for a
ray traversal initiated with the \f[V]rtcIntersect1\f[R] function.
The callback arguments structure of the callback invokation has to get
passed to the ray forwarding (\f[V]args\f[R] argument).
The user geometry callback should instantly terminate after invoking the
\f[V]rtcForwardIntersect1/Ex\f[R] function.
.PP
Only the ray origin and ray direction members of the ray argument are
used for forwarding, all additional ray properties are inherited from
the initial ray traversal invokation of \f[V]rtcIntersect1\f[R].
.PP
The implementation of the \f[V]rtcForwardIntersect1\f[R] function
recursively continues the ray traversal into the specified scene and
pushes the provided instance ID (\f[V]instID\f[R] argument) to the
instance ID stack.
Hit information is updated into the ray hit structure passed to the
original \f[V]rtcIntersect1\f[R] invokation.
.PP
This function can get used to implement user defined instancing using
user geometries, e.g.\ by transforming the ray in a special way, and/or
selecting between different scenes to instantiate.
.PP
For user defined instance arrays, the \f[V]rtcForwardIntersect1Ex\f[R]
variant has an additional \f[V]instPrimID\f[R] argument which is pushed
to the instance primitive ID stack.
Instance primitive IDs identify which instance of an instance array was
hit.
.PP
When using Embree on the CPU it is possible to recursively invoke
\f[V]rtcIntersect1\f[R] directly from a user geometry callback.
However, when SYCL is used, recursively tracing rays is not directly
supported, and the \f[V]rtcForwardIntersect1/Ex\f[R] functions must be
used.
.PP
The ray structure must be aligned to 16 bytes.
.SS EXIT STATUS
.PP
For performance reasons this function does not do any error checks, thus
will not set any error flags on failure.
.SS SEE ALSO
.PP
[rtcIntersect1], [RTCRay]
