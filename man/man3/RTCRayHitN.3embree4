.\" Automatically generated by Pandoc 3.1.3
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "RTCRayHitN" "3" "" "" "Embree Ray Tracing Kernels 4"
.hy
.SS NAME
.IP
.nf
\f[C]
RTCRayHitN - combined ray/hit packet of runtime size
\f[R]
.fi
.SS SYNOPSIS
.IP
.nf
\f[C]
#include <embree4/rtcore_ray.h>

struct RTCRayHitN;

struct RTCRayN* RTCRayHitN_RayN(struct RTCRayHitN* rayhit, unsigned int N);
struct RTCHitN* RTCRayHitN_HitN(struct RTCRayHitN* rayhit, unsigned int N);
\f[R]
.fi
.SS DESCRIPTION
.PP
When the packet size of a ray/hit structure is not known at compile time
(e.g.\ when Embree returns a ray/hit packet in the
\f[V]RTCIntersectFunctionN\f[R] callback function), Embree uses the
\f[V]RTCRayHitN\f[R] type for ray packets.
These ray/hit packets can only have sizes of 1, 4, 8, or 16.
No other packet size will be used.
.PP
You can either implement different special code paths for each of these
possible packet sizes and cast the ray/hit to the appropriate ray/hit
packet type, or extract the \f[V]RTCRayN\f[R] and \f[V]RTCHitN\f[R]
components using the \f[V]rtcGetRayN\f[R] and \f[V]rtcGetHitN\f[R]
helper functions and use the \f[V]RTCRayN_XXX\f[R] and
\f[V]RTCHitN_XXX\f[R] functions to access the ray and hit parts of the
structure.
.SS EXIT STATUS
.SS SEE ALSO
.PP
[RTCHitN]
