.\" Automatically generated by Pandoc 3.1.3
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "rtcGetDeviceError" "3" "" "" "Embree Ray Tracing Kernels 4"
.hy
.SS NAME
.IP
.nf
\f[C]
rtcGetDeviceError - returns the error code of the device
\f[R]
.fi
.SS SYNOPSIS
.IP
.nf
\f[C]
#include <embree4/rtcore.h>

RTCError rtcGetDeviceError(RTCDevice device);
\f[R]
.fi
.SS DESCRIPTION
.PP
Each thread has its own error code per device.
If an error occurs when calling an API function, this error code is set
to the occurred error if it stores no previous error.
The \f[V]rtcGetDeviceError\f[R] function reads and returns the currently
stored error and clears the error code.
This assures that the returned error code is always the first error
occurred since the last invocation of \f[V]rtcGetDeviceError\f[R].
.PP
Possible error codes returned by \f[V]rtcGetDeviceError\f[R] are:
.IP \[bu] 2
\f[V]RTC_ERROR_NONE\f[R]: No error occurred.
.IP \[bu] 2
\f[V]RTC_ERROR_UNKNOWN\f[R]: An unknown error has occurred.
.IP \[bu] 2
\f[V]RTC_ERROR_INVALID_ARGUMENT\f[R]: An invalid argument was specified.
.IP \[bu] 2
\f[V]RTC_ERROR_INVALID_OPERATION\f[R]: The operation is not allowed for
the specified object.
.IP \[bu] 2
\f[V]RTC_ERROR_OUT_OF_MEMORY\f[R]: There is not enough memory left to
complete the operation.
.IP \[bu] 2
\f[V]RTC_ERROR_UNSUPPORTED_CPU\f[R]: The CPU is not supported as it does
not support the lowest ISA Embree is compiled for.
.IP \[bu] 2
\f[V]RTC_ERROR_CANCELLED\f[R]: The operation got canceled by a memory
monitor callback or progress monitor callback function.
.IP \[bu] 2
\f[V]RTC_ERROR_LEVEL_ZERO_RAYTRACING_SUPPORT_MISSING\f[R]: This error
can occur when creating an Embree device with SYCL support using
\f[V]rtcNewSYCLDevice\f[R] fails.
This error probably means that the GPU driver is to old or not installed
properly.
Install a new GPU driver and on Linux make sure that the package
\f[V]intel-level-zero-gpu-raytracing\f[R] is installed.
For general driver installation information for Linux refer to
<https://dgpu-docs.intel.com>.
.PP
When the device construction fails, \f[V]rtcNewDevice\f[R] returns
\f[V]NULL\f[R] as device.
To detect the error code of a such a failed device construction, pass
\f[V]NULL\f[R] as device to the \f[V]rtcGetDeviceError\f[R] function.
For all other invocations of \f[V]rtcGetDeviceError\f[R], a proper
device pointer must be specified.
.PP
The API function \f[V]rtcGetDeviceLastErrorMessage\f[R] can be used to
get more details about the last \f[V]RTCError\f[R] a \f[V]RTCDevice\f[R]
encountered.
.PP
For convenient reporting of a \f[V]RTCError\f[R], the API function
\f[V]rtcGetErrorString\f[R] can be used, which returns a string
representation of a given \f[V]RTCError\f[R].
.SS EXIT STATUS
.PP
Returns the error code for the device.
.SS SEE ALSO
.PP
[rtcSetDeviceErrorFunction], [rtcGetDeviceLastErrorMessage],
[rtcGetErrorString]
