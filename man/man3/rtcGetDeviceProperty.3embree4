.\" Automatically generated by Pandoc 3.1.3
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "rtcGetDeviceProperty" "3" "" "" "Embree Ray Tracing Kernels 4"
.hy
.SS NAME
.IP
.nf
\f[C]
rtcGetDeviceProperty - queries properties of the device
\f[R]
.fi
.SS SYNOPSIS
.IP
.nf
\f[C]
#include <embree4/rtcore.h>

ssize_t rtcGetDeviceProperty(
  RTCDevice device,
  enum RTCDeviceProperty prop
);
\f[R]
.fi
.SS DESCRIPTION
.PP
The \f[V]rtcGetDeviceProperty\f[R] function can be used to query
properties (\f[V]prop\f[R] argument) of a device object
(\f[V]device\f[R] argument).
The returned property is an integer of type \f[V]ssize_t\f[R].
.PP
Possible properties to query are:
.IP \[bu] 2
\f[V]RTC_DEVICE_PROPERTY_VERSION\f[R]: Queries the combined version
number (MAJOR.MINOR.PATCH) with two decimal digits per component.
E.g.
for Embree 2.8.3 the integer 208003 is returned.
.IP \[bu] 2
\f[V]RTC_DEVICE_PROPERTY_VERSION_MAJOR\f[R]: Queries the major version
number of Embree.
.IP \[bu] 2
\f[V]RTC_DEVICE_PROPERTY_VERSION_MINOR\f[R]: Queries the minor version
number of Embree.
.IP \[bu] 2
\f[V]RTC_DEVICE_PROPERTY_VERSION_PATCH\f[R]: Queries the patch version
number of Embree.
.IP \[bu] 2
\f[V]RTC_DEVICE_PROPERTY_NATIVE_RAY4_SUPPORTED\f[R]: Queries whether the
\f[V]rtcIntersect4\f[R] and \f[V]rtcOccluded4\f[R] functions preserve
packet size and ray order when invoking callback functions.
This is only the case if Embree is compiled with
\f[V]EMBREE_RAY_PACKETS\f[R] and \f[V]SSE2\f[R] (or \f[V]SSE4.2\f[R])
enabled, and if the machine it is running on supports \f[V]SSE2\f[R] (or
\f[V]SSE4.2\f[R]).
.IP \[bu] 2
\f[V]RTC_DEVICE_PROPERTY_NATIVE_RAY8_SUPPORTED\f[R]: Queries whether the
\f[V]rtcIntersect8\f[R] and \f[V]rtcOccluded8\f[R] functions preserve
packet size and ray order when invoking callback functions.
This is only the case if Embree is compiled with
\f[V]EMBREE_RAY_PACKETS\f[R] and \f[V]AVX\f[R] (or \f[V]AVX2\f[R])
enabled, and if the machine it is running on supports \f[V]AVX\f[R] (or
\f[V]AVX2\f[R]).
.IP \[bu] 2
\f[V]RTC_DEVICE_PROPERTY_NATIVE_RAY16_SUPPORTED\f[R]: Queries whether
the \f[V]rtcIntersect16\f[R] and \f[V]rtcOccluded16\f[R] functions
preserve packet size and ray order when invoking callback functions.
This is only the case if Embree is compiled with
\f[V]EMBREE_RAY_PACKETS\f[R] and \f[V]AVX512\f[R] enabled, and if the
machine it is running on supports \f[V]AVX512\f[R].
.IP \[bu] 2
\f[V]RTC_DEVICE_PROPERTY_RAY_MASK_SUPPORTED\f[R]: Queries whether ray
masks are supported.
This is only the case if Embree is compiled with
\f[V]EMBREE_RAY_MASK\f[R] enabled.
.IP \[bu] 2
\f[V]RTC_DEVICE_PROPERTY_BACKFACE_CULLING_ENABLED\f[R]: Queries whether
back face culling is enabled.
This is only the case if Embree is compiled with
\f[V]EMBREE_BACKFACE_CULLING\f[R] enabled.
.IP \[bu] 2
\f[V]RTC_DEVICE_PROPERTY_BACKFACE_CULLING_CURVES_ENABLED\f[R]: Queries
whether back face culling for curves is enabled.
This is only the case if Embree is compiled with
\f[V]EMBREE_BACKFACE_CULLING_CURVES\f[R] enabled.
.IP \[bu] 2
\f[V]RTC_DEVICE_PROPERTY_BACKFACE_CULLING_SPHERES_ENABLED\f[R]: Queries
whether back face culling for spheres is enabled.
This is only the case if Embree is compiled with
\f[V]EMBREE_BACKFACE_CULLING_SPHERES\f[R] enabled.
.IP \[bu] 2
\f[V]RTC_DEVICE_PROPERTY_COMPACT_POLYS_ENABLED\f[R]: Queries whether
compact polys is enabled.
This is only the case if Embree is compiled with
\f[V]EMBREE_COMPACT_POLYS\f[R] enabled.
.IP \[bu] 2
\f[V]RTC_DEVICE_PROPERTY_FILTER_FUNCTION_SUPPORTED\f[R]: Queries whether
filter functions are supported, which is the case if Embree is compiled
with \f[V]EMBREE_FILTER_FUNCTION\f[R] enabled.
.IP \[bu] 2
\f[V]RTC_DEVICE_PROPERTY_IGNORE_INVALID_RAYS_ENABLED\f[R]: Queries
whether invalid rays are ignored, which is the case if Embree is
compiled with \f[V]EMBREE_IGNORE_INVALID_RAYS\f[R] enabled.
.IP \[bu] 2
\f[V]RTC_DEVICE_PROPERTY_TRIANGLE_GEOMETRY_SUPPORTED\f[R]: Queries
whether triangles are supported, which is the case if Embree is compiled
with \f[V]EMBREE_GEOMETRY_TRIANGLE\f[R] enabled.
.IP \[bu] 2
\f[V]RTC_DEVICE_PROPERTY_QUAD_GEOMETRY_SUPPORTED\f[R]: Queries whether
quads are supported, which is the case if Embree is compiled with
\f[V]EMBREE_GEOMETRY_QUAD\f[R] enabled.
.IP \[bu] 2
\f[V]RTC_DEVICE_PROPERTY_SUBDIVISION_GEOMETRY_SUPPORTED\f[R]: Queries
whether subdivision meshes are supported, which is the case if Embree is
compiled with \f[V]EMBREE_GEOMETRY_SUBDIVISION\f[R] enabled.
.IP \[bu] 2
\f[V]RTC_DEVICE_PROPERTY_CURVE_GEOMETRY_SUPPORTED\f[R]: Queries whether
curves are supported, which is the case if Embree is compiled with
\f[V]EMBREE_GEOMETRY_CURVE\f[R] enabled.
.IP \[bu] 2
\f[V]RTC_DEVICE_PROPERTY_POINT_GEOMETRY_SUPPORTED\f[R]: Queries whether
points are supported, which is the case if Embree is compiled with
\f[V]EMBREE_GEOMETRY_POINT\f[R] enabled.
.IP \[bu] 2
\f[V]RTC_DEVICE_PROPERTY_USER_GEOMETRY_SUPPORTED\f[R]: Queries whether
user geometries are supported, which is the case if Embree is compiled
with \f[V]EMBREE_GEOMETRY_USER\f[R] enabled.
.IP \[bu] 2
\f[V]RTC_DEVICE_PROPERTY_TASKING_SYSTEM\f[R]: Queries the tasking system
Embree is compiled with.
Possible return values are:
.RS 2
.IP "0." 3
internal tasking system
.IP "1." 3
Intel Threading Building Blocks (TBB)
.IP "2." 3
Parallel Patterns Library (PPL)
.RE
.IP \[bu] 2
\f[V]RTC_DEVICE_PROPERTY_JOIN_COMMIT_SUPPORTED\f[R]: Queries whether
\f[V]rtcJoinCommitScene\f[R] is supported.
This is not the case when Embree is compiled with PPL or older versions
of TBB.
.IP \[bu] 2
\f[V]RTC_DEVICE_PROPERTY_PARALLEL_COMMIT_SUPPORTED\f[R]: Queries whether
\f[V]rtcCommitScene\f[R] can get invoked from multiple TBB worker
threads concurrently.
This feature is only supported starting with TBB 2019 Update 9.
.SS EXIT STATUS
.PP
On success returns the value of the queried property.
For properties returning a boolean value, the return value 0 denotes
\f[V]false\f[R] and 1 denotes \f[V]true\f[R].
.PP
On failure zero is returned and an error code is set that can be queried
using \f[V]rtcGetDeviceError\f[R].
