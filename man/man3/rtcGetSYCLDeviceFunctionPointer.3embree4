.\" Automatically generated by Pandoc 3.1.3
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "rtcGetSYCLDeviceFunctionPointer" "3" "" "" "Embree Ray Tracing Kernels 4"
.hy
.SS NAME
.IP
.nf
\f[C]
rtcGetSYCLDeviceFunctionPointer - obtains a device side
  function pointer for some SYCL function
\f[R]
.fi
.SS SYNOPSIS
.IP
.nf
\f[C]
#include <embree4/rtcore.h>

template<auto F>
inline decltype(F) rtcGetSYCLDeviceFunctionPointer(sycl::queue& queue);
\f[R]
.fi
.SS DESCRIPTION
.PP
This function returns a device side function pointer for some function
F.
This function F must be defined using the
\f[V]RTC_SYCL_INDIRECTLY_CALLABLE\f[R] attribute, e.g.:
.IP
.nf
\f[C]
RTC_SYCL_INDIRECTLY_CALLABLE void filter(
  const RTCFilterFunctionNArguments* args) { ... }

RTCFilterFunctionN fptr = rtcGetSYCLDeviceFunctionPointer<filter>(queue);
\f[R]
.fi
.PP
Such a device side function pointers of some filter callbacks can get
assigned to a geometry using the
\f[V]rtcSetGeometryIntersectFilterFunction\f[R] and
\f[V]rtcSetGeometryOccludedFilterFunction\f[R] API functions.
.PP
Further, device side function pointers for user geometry callbacks can
be assigned to geometries using the
\f[V]rtcSetGeometryIntersectFunction\f[R] and
\f[V]rtcSetGeometryOccludedFunction\f[R] API calls.
.PP
These geometry versions of the callback functions are disabled in SYCL
by default, and we recommend not using them for performance reasons.
.SS EXIT STATUS
.PP
On failure an error code is set that can be queried using
\f[V]rtcGetDeviceError\f[R].
.SS SEE ALSO
.PP
[rtcSetGeometryIntersectFunction], [rtcSetGeometryOccludedFunction],
[rtcSetGeometryIntersectFilterFunction],
[rtcSetGeometryOccludedFilterFunction]
